{"ast":null,"code":"var _jsxFileName = \"/Users/raebo/Desktop/client/src/components/comments/Comments.jsx\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../context/authContext\";\nimport \"./comments.scss\";\nimport { useQuery } from '@tanstack/react-query';\nimport { makeRequest } from \"../../axios\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = postId => {\n  _s();\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery(['comments'], () => makeRequest.get(`/comments?postId=${postId}`).then(res => {\n    return res.data;\n  }));\n  const queryClient = useQueryClient();\n  const mutation = useMutation(newPost => {\n    return makeRequest.post(\"./posts\", newPost);\n  }, {\n    onSuccess: () => {\n      //invalidate and fetch\n      queryClient.invalidateQueries(\"posts\");\n    }\n  });\n  const handleClick = async e => {\n    e.preventDefault();\n    let imgUrl;\n    if (file) {\n      imgUrl = await upload();\n    }\n    mutation.mutate({\n      desc,\n      img: imgUrl\n    });\n    setDesc(\"\");\n    setFile(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"write\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentUser.profilePic,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Write a comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), error ? \"Something went wrong\" : isLoading ? \"is loading\" : data.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: comment.img,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: comment.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date\",\n        children: moment(comment.createdAt).fromNow()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)]\n    }, comment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(Comments, \"Ya7hQxP3rvhpqz0ZEXjH4K8u+Tk=\", true, function () {\n  return [useQuery];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useContext","AuthContext","useQuery","makeRequest","moment","Comments","postId","currentUser","isLoading","error","data","get","then","res","queryClient","useQueryClient","mutation","useMutation","newPost","post","onSuccess","invalidateQueries","handleClick","e","preventDefault","imgUrl","file","upload","mutate","desc","img","setDesc","setFile","profilePic","map","comment","name","createdAt","fromNow","id"],"sources":["/Users/raebo/Desktop/client/src/components/comments/Comments.jsx"],"sourcesContent":["import { useContext } from \"react\"\nimport { AuthContext } from \"../../context/authContext\"\nimport \"./comments.scss\"\nimport {\n    useQuery,\n} from '@tanstack/react-query'\nimport { makeRequest } from \"../../axios\"\nimport moment from \"moment\"\n\nconst Comments = (postId) => {\n    const { currentUser } = useContext(AuthContext);\n\n    const { isLoading, error, data } = useQuery(['comments'],\n        () =>\n            makeRequest.get(`/comments?postId=${postId}`).then((res) => {\n                return res.data;\n            })\n    )\n\n    const queryClient = useQueryClient();\n    const mutation = useMutation(\n        (newPost) => {\n            return makeRequest.post(\"./posts\", newPost);\n        }, {\n        onSuccess: () => {\n            //invalidate and fetch\n            queryClient.invalidateQueries(\"posts\");\n        }\n    })\n\n    const handleClick = async (e) => {\n        e.preventDefault();\n        let imgUrl;\n        if (file) {\n            imgUrl = await upload();\n        }\n        mutation.mutate({ desc, img: imgUrl });\n        setDesc(\"\");\n        setFile(null);\n    }\n\n\n    return (\n        <div className=\"comments\">\n            <div className=\"write\">\n                <img src={currentUser.profilePic} alt=\"\" />\n                <input type=\"text\" placeholder=\"Write a comment\" />\n                <button>Send</button>\n            </div>\n            {error ? \"Something went wrong\" : (isLoading ? \"is loading\" : data.map((comment) => (\n                <div className=\"comment\" key={comment.id}>\n                    <img src={comment.img} alt=\"\" />\n                    <div className=\"info\">\n                        <span>{comment.name}</span>\n                        <p>{comment.desc}</p>\n                    </div>\n                    <div className=\"date\">{moment(comment.createdAt).fromNow()}</div>\n                </div>\n            )))}\n        </div>\n    )\n}\n\nexport default Comments"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,WAAW,QAAQ,2BAA2B;AACvD,OAAO,iBAAiB;AACxB,SACIC,QAAQ,QACL,uBAAuB;AAC9B,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,MAAM,MAAM,QAAQ;AAAA;AAE3B,MAAMC,QAAQ,GAAIC,MAAM,IAAK;EAAA;EACzB,MAAM;IAAEC;EAAY,CAAC,GAAGP,UAAU,CAACC,WAAW,CAAC;EAE/C,MAAM;IAAEO,SAAS;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGR,QAAQ,CAAC,CAAC,UAAU,CAAC,EACpD,MACIC,WAAW,CAACQ,GAAG,CAAE,oBAAmBL,MAAO,EAAC,CAAC,CAACM,IAAI,CAAEC,GAAG,IAAK;IACxD,OAAOA,GAAG,CAACH,IAAI;EACnB,CAAC,CAAC,CACT;EAED,MAAMI,WAAW,GAAGC,cAAc,EAAE;EACpC,MAAMC,QAAQ,GAAGC,WAAW,CACvBC,OAAO,IAAK;IACT,OAAOf,WAAW,CAACgB,IAAI,CAAC,SAAS,EAAED,OAAO,CAAC;EAC/C,CAAC,EAAE;IACHE,SAAS,EAAE,MAAM;MACb;MACAN,WAAW,CAACO,iBAAiB,CAAC,OAAO,CAAC;IAC1C;EACJ,CAAC,CAAC;EAEF,MAAMC,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC7BA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAIC,MAAM;IACV,IAAIC,IAAI,EAAE;MACND,MAAM,GAAG,MAAME,MAAM,EAAE;IAC3B;IACAX,QAAQ,CAACY,MAAM,CAAC;MAAEC,IAAI;MAAEC,GAAG,EAAEL;IAAO,CAAC,CAAC;IACtCM,OAAO,CAAC,EAAE,CAAC;IACXC,OAAO,CAAC,IAAI,CAAC;EACjB,CAAC;EAGD,oBACI;IAAK,SAAS,EAAC,UAAU;IAAA,wBACrB;MAAK,SAAS,EAAC,OAAO;MAAA,wBAClB;QAAK,GAAG,EAAEzB,WAAW,CAAC0B,UAAW;QAAC,GAAG,EAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,eAC3C;QAAO,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAG,eACnD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAqB;IAAA;MAAA;MAAA;MAAA;IAAA,QACnB,EACLxB,KAAK,GAAG,sBAAsB,GAAID,SAAS,GAAG,YAAY,GAAGE,IAAI,CAACwB,GAAG,CAAEC,OAAO,iBAC3E;MAAK,SAAS,EAAC,SAAS;MAAA,wBACpB;QAAK,GAAG,EAAEA,OAAO,CAACL,GAAI;QAAC,GAAG,EAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,eAChC;QAAK,SAAS,EAAC,MAAM;QAAA,wBACjB;UAAA,UAAOK,OAAO,CAACC;QAAI;UAAA;UAAA;UAAA;QAAA,QAAQ,eAC3B;UAAA,UAAID,OAAO,CAACN;QAAI;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QACnB,eACN;QAAK,SAAS,EAAC,MAAM;QAAA,UAAEzB,MAAM,CAAC+B,OAAO,CAACE,SAAS,CAAC,CAACC,OAAO;MAAE;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA,GANvCH,OAAO,CAACI,EAAE;MAAA;MAAA;MAAA;IAAA,QAQ3C,CAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEd,CAAC;AAAA,GApDKlC,QAAQ;EAAA,QAGyBH,QAAQ;AAAA;AAAA,KAHzCG,QAAQ;AAsDd,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}